import Gaffer
import GafferAppleseed
import GafferImage
import GafferOSL
import GafferScene
import IECore

Gaffer.Metadata.registerNodeValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:majorVersion", 18, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectName", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"]["name"].setValue( 'project:name' )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"]["value"].setValue( 'default' )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectRootDirectory", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"]["name"].setValue( 'project:rootDirectory' )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"]["value"].setValue( '$HOME/gaffer/projects/${project:name}' )
__children["SphereA"] = GafferScene.Sphere( "SphereA" )
parent.addChild( __children["SphereA"] )
__children["SphereA"]["name"].setValue( 'sphereA' )
__children["SphereA"]["transform"]["translate"].setValue( IECore.V3f( 0, 2, 0 ) )
__children["SphereA"]["radius"].setValue( 2.0 )
__children["SphereA"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SphereA"]["__uiPosition"].setValue( IECore.V2f( 3.14631844, 1.75004292 ) )
__children["Plane"] = GafferScene.Plane( "Plane" )
parent.addChild( __children["Plane"] )
__children["Plane"]["transform"]["rotate"].setValue( IECore.V3f( 90, 0, 0 ) )
__children["Plane"]["dimensions"].setValue( IECore.V2f( 20, 20 ) )
__children["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"]["__uiPosition"].setValue( IECore.V2f( 12.9223499, 7.47339344 ) )
__children["Group"] = GafferScene.Group( "Group" )
parent.addChild( __children["Group"] )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["name"].setValue( 'geoGroup' )
__children["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["__uiPosition"].setValue( IECore.V2f( 10.378315, -8.2737484 ) )
__children["Camera"] = GafferScene.Camera( "Camera" )
parent.addChild( __children["Camera"] )
__children["Camera"]["transform"]["translate"].setValue( IECore.V3f( 0, 5, 6 ) )
__children["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Camera"]["__uiPosition"].setValue( IECore.V2f( -6.64454079, -7.1904583 ) )
__children["Group1"] = GafferScene.Group( "Group1" )
parent.addChild( __children["Group1"] )
__children["Group1"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group1"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group1"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group1"]["name"].setValue( 'rootGroup' )
__children["Group1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group1"]["__uiPosition"].setValue( IECore.V2f( 5.14011574, -17.481842 ) )
__children["AimConstraint"] = GafferScene.AimConstraint( "AimConstraint" )
parent.addChild( __children["AimConstraint"] )
__children["AimConstraint"]["target"].setValue( '/rootGroup/geoGroup/sphereA' )
__children["AimConstraint"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AimConstraint"]["__uiPosition"].setValue( IECore.V2f( 5.14011574, -27.5657482 ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/rootGroup/camera' ] ) )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"]["__uiPosition"].setValue( IECore.V2f( 12.1035595, -22.2918224 ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["defaultFormat"].setValue( GafferImage.Format( 1920, 1080, 1.000 ) )
__children["defaultFormat"]["displayWindow"]["min"].setValue( IECore.V2i( 0, 0 ) )
__children["defaultFormat"]["displayWindow"]["max"].setValue( IECore.V2i( 1920, 1080 ) )
__children["Display"] = GafferImage.Display( "Display" )
parent.addChild( __children["Display"] )
__children["Display"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Display"]["__uiPosition"].setValue( IECore.V2f( 20.5434895, -97.3219299 ) )
__children["StandardOptions"] = GafferScene.StandardOptions( "StandardOptions" )
parent.addChild( __children["StandardOptions"] )
__children["StandardOptions"]["options"]["renderCamera"]["value"].setValue( '/rootGroup/camera' )
__children["StandardOptions"]["options"]["renderCamera"]["enabled"].setValue( True )
__children["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardOptions"]["__uiPosition"].setValue( IECore.V2f( 5.14043808, -79.8426132 ) )
__children["Outputs"] = GafferScene.Outputs( "Outputs" )
parent.addChild( __children["Outputs"] )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["name"].setValue( 'Interactive/Beauty' )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["fileName"].setValue( 'beauty' )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["type"].setValue( 'ieDisplay' )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "driverType", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["driverType"].addChild( Gaffer.StringPlug( "name", defaultValue = 'driverType', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["driverType"].addChild( Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "displayHost", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["displayHost"].addChild( Gaffer.StringPlug( "name", defaultValue = 'displayHost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["displayHost"].addChild( Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "displayPort", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["displayPort"].addChild( Gaffer.StringPlug( "name", defaultValue = 'displayPort', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["displayPort"].addChild( Gaffer.StringPlug( "value", defaultValue = '1559', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "quantize", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["quantize"].addChild( Gaffer.StringPlug( "name", defaultValue = 'quantize', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["quantize"].addChild( Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "remoteDisplayType", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["remoteDisplayType"].addChild( Gaffer.StringPlug( "name", defaultValue = 'remoteDisplayType', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["remoteDisplayType"].addChild( Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["__uiPosition"].setValue( IECore.V2f( 5.13962078, -89.0066757 ) )
__children["AppleseedRender"] = GafferAppleseed.AppleseedRender( "AppleseedRender" )
parent.addChild( __children["AppleseedRender"] )
__children["AppleseedRender"]["fileName"].setValue( '${project:rootDirectory}/appleseeds/${script:name}/${script:name}.####.appleseed' )
__children["AppleseedRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AppleseedRender"]["__uiPosition"].setValue( IECore.V2f( 3.64043522, -98.1707382 ) )
__children["SphereB"] = GafferScene.Sphere( "SphereB" )
parent.addChild( __children["SphereB"] )
__children["SphereB"]["name"].setValue( 'sphereB' )
__children["SphereB"]["transform"]["translate"].setValue( IECore.V3f( 4, 2, 0 ) )
__children["SphereB"]["radius"].setValue( 2.0 )
__children["SphereB"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SphereB"]["__uiPosition"].setValue( IECore.V2f( 22.2020741, 1.08367777 ) )
__children["SphereB"].addChild( Gaffer.V2fPlug( "__uiPosition1", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment"] = GafferScene.ShaderAssignment( "ShaderAssignment" )
parent.addChild( __children["ShaderAssignment"] )
__children["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment"]["__uiPosition"].setValue( IECore.V2f( 5.14043808, -37.4366226 ) )
__children["ballSurface"] = GafferOSL.OSLShader( "ballSurface" )
parent.addChild( __children["ballSurface"] )
__children["ballSurface"]["name"].setValue( 'material/as_disney_material' )
__children["ballSurface"]["type"].setValue( 'osl:surface' )
__children["ballSurface"]["parameters"].addChild( Gaffer.V3fPlug( "Normal", defaultValue = IECore.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ballSurface"]["parameters"].addChild( Gaffer.V3fPlug( "Tangent", defaultValue = IECore.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ballSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "BaseColor", defaultValue = IECore.Color3f( 0.5, 0.5, 0.5 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ballSurface"]["parameters"]["BaseColor"].setValue( IECore.Color3f( 0.5, 0.180000007, 0.180000007 ) )
__children["ballSurface"]["parameters"].addChild( Gaffer.FloatPlug( "Subsurface", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ballSurface"]["parameters"].addChild( Gaffer.FloatPlug( "Metallic", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ballSurface"]["parameters"].addChild( Gaffer.FloatPlug( "Specular", defaultValue = 0.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ballSurface"]["parameters"]["Specular"].setValue( 1.0 )
__children["ballSurface"]["parameters"].addChild( Gaffer.FloatPlug( "SpecularTint", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ballSurface"]["parameters"].addChild( Gaffer.FloatPlug( "Anisotropic", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ballSurface"]["parameters"].addChild( Gaffer.FloatPlug( "Roughness", defaultValue = 0.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ballSurface"]["parameters"]["Roughness"].setValue( 0.25 )
__children["ballSurface"]["parameters"].addChild( Gaffer.FloatPlug( "Sheen", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ballSurface"]["parameters"].addChild( Gaffer.FloatPlug( "SheenTint", defaultValue = 0.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ballSurface"]["parameters"].addChild( Gaffer.FloatPlug( "Clearcoat", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ballSurface"]["parameters"].addChild( Gaffer.FloatPlug( "ClearcoatGloss", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ballSurface"].addChild( Gaffer.Plug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ballSurface"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ballSurface"]["__uiPosition"].setValue( IECore.V2f( -16.2924156, -37.4366226 ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/rootGroup/geoGroup/sphere*' ] ) )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"]["__uiPosition"].setValue( IECore.V2f( 18.1589146, -30.3536949 ) )
__children["ShaderAssignment1"] = GafferScene.ShaderAssignment( "ShaderAssignment1" )
parent.addChild( __children["ShaderAssignment1"] )
__children["ShaderAssignment1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment1"]["__uiPosition"].setValue( IECore.V2f( 5.14046001, -58.6392822 ) )
__children["floorSurface"] = GafferOSL.OSLShader( "floorSurface" )
parent.addChild( __children["floorSurface"] )
__children["floorSurface"]["name"].setValue( 'material/as_disney_material' )
__children["floorSurface"]["type"].setValue( 'osl:surface' )
__children["floorSurface"]["parameters"].addChild( Gaffer.V3fPlug( "Normal", defaultValue = IECore.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["floorSurface"]["parameters"].addChild( Gaffer.V3fPlug( "Tangent", defaultValue = IECore.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["floorSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "BaseColor", defaultValue = IECore.Color3f( 0.5, 0.5, 0.5 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["floorSurface"]["parameters"]["BaseColor"].setValue( IECore.Color3f( 0.180000007, 0.5, 0.180000007 ) )
__children["floorSurface"]["parameters"].addChild( Gaffer.FloatPlug( "Subsurface", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["floorSurface"]["parameters"].addChild( Gaffer.FloatPlug( "Metallic", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["floorSurface"]["parameters"].addChild( Gaffer.FloatPlug( "Specular", defaultValue = 0.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["floorSurface"]["parameters"]["Specular"].setValue( 0.0 )
__children["floorSurface"]["parameters"].addChild( Gaffer.FloatPlug( "SpecularTint", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["floorSurface"]["parameters"].addChild( Gaffer.FloatPlug( "Anisotropic", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["floorSurface"]["parameters"].addChild( Gaffer.FloatPlug( "Roughness", defaultValue = 0.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["floorSurface"]["parameters"]["Roughness"].setValue( 0.25 )
__children["floorSurface"]["parameters"].addChild( Gaffer.FloatPlug( "Sheen", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["floorSurface"]["parameters"].addChild( Gaffer.FloatPlug( "SheenTint", defaultValue = 0.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["floorSurface"]["parameters"].addChild( Gaffer.FloatPlug( "Clearcoat", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["floorSurface"]["parameters"].addChild( Gaffer.FloatPlug( "ClearcoatGloss", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["floorSurface"].addChild( Gaffer.Plug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["floorSurface"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["floorSurface"]["__uiPosition"].setValue( IECore.V2f( -16.511219, -58.6392822 ) )
__children["PathFilter2"] = GafferScene.PathFilter( "PathFilter2" )
parent.addChild( __children["PathFilter2"] )
__children["PathFilter2"]["paths"].setValue( IECore.StringVectorData( [ '/rootGroup/geoGroup/plane' ] ) )
__children["PathFilter2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter2"]["__uiPosition"].setValue( IECore.V2f( 17.2383995, -51.5563507 ) )
__children["point_light"] = GafferAppleseed.AppleseedLight( "point_light" )
parent.addChild( __children["point_light"] )
__children["point_light"]["name"].setValue( 'keyLight' )
__children["point_light"]["transform"]["translate"].setValue( IECore.V3f( -2, 5, 2 ) )
__children["point_light"]["parameters"].addChild( Gaffer.Color3fPlug( "intensity", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["point_light"]["parameters"].addChild( Gaffer.FloatPlug( "intensity_multiplier", defaultValue = 1.0, minValue = 0.0, maxValue = 10.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["point_light"]["parameters"].addChild( Gaffer.BoolPlug( "cast_indirect_light", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["point_light"]["parameters"].addChild( Gaffer.FloatPlug( "importance_multiplier", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["point_light"]["__model"].setValue( 'point_light' )
__children["point_light"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["point_light"]["__uiPosition"].setValue( IECore.V2f( 27.7496433, -8.21900368 ) )
__children["Grade"] = GafferImage.Grade( "Grade" )
parent.addChild( __children["Grade"] )
__children["Grade"]["gain"]["r"].setValue( 8.920000076293945 )
__children["Grade"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Grade"]["__uiPosition"].setValue( IECore.V2f( 20.5425949, -106.485992 ) )
parent["variables"]["projectName"]["name"].setFlags( Gaffer.Plug.Flags.ReadOnly, True )
parent["variables"]["projectRootDirectory"]["name"].setFlags( Gaffer.Plug.Flags.ReadOnly, True )
__children["Group"]["in"]["in0"].setInput( __children["SphereA"]["out"] )
__children["Group"]["in"]["in1"].setInput( __children["Plane"]["out"] )
__children["Group"]["in"]["in2"].setInput( __children["SphereB"]["out"] )
__children["Group1"]["in"]["in0"].setInput( __children["Camera"]["out"] )
__children["Group1"]["in"]["in1"].setInput( __children["Group"]["out"] )
__children["Group1"]["in"]["in2"].setInput( __children["point_light"]["out"] )
__children["AimConstraint"]["in"].setInput( __children["Group1"]["out"] )
__children["AimConstraint"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["StandardOptions"]["in"].setInput( __children["ShaderAssignment1"]["out"] )
__children["Outputs"]["in"].setInput( __children["StandardOptions"]["out"] )
__children["AppleseedRender"]["in"].setInput( __children["Outputs"]["out"] )
__children["ShaderAssignment"]["in"].setInput( __children["AimConstraint"]["out"] )
__children["ShaderAssignment"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["ShaderAssignment"]["shader"].setInput( __children["ballSurface"]["out"] )
__children["ShaderAssignment1"]["in"].setInput( __children["ShaderAssignment"]["out"] )
__children["ShaderAssignment1"]["filter"].setInput( __children["PathFilter2"]["out"] )
__children["ShaderAssignment1"]["shader"].setInput( __children["floorSurface"]["out"] )
__children["Grade"]["in"].setInput( __children["Display"]["out"] )
__children["Grade"]["gain"]["g"].setInput( __children["Grade"]["gain"]["r"] )
__children["Grade"]["gain"]["b"].setInput( __children["Grade"]["gain"]["r"] )
__children["ballSurface"].loadShader( "material/as_disney_material", keepExistingValues=True )
__children["floorSurface"].loadShader( "material/as_disney_material", keepExistingValues=True )


del __children

